/************************************************************************************\
 * Replay - An Andrew Shurney Production                                         *
\************************************************************************************/

/*! \file		DirectInputDeviceHooks.h
 *  \author		Andrew Shurney
 *  \brief		Defines classes to hook IDirectInput
 */

#ifndef DIRECT_INPUT_DEVICE_HOOKS_H
#define DIRECT_INPUT_DEVICE_HOOKS_H

#define DIRECTINPUT_VERSION 0x0800
#include <dinput.h>

class DirectInputDeviceAHook : public IDirectInputDeviceA
{
	private:
		IDirectInputDeviceA * did;

	public:
		DirectInputDeviceAHook(IDirectInputDeviceA* did);

		/*** IUnknown methods ***/
		STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID * ppvObj);
		STDMETHOD_(ULONG,AddRef)(THIS);
		STDMETHOD_(ULONG,Release)(THIS);

		/*** IDirectInputDeviceA methods ***/
		STDMETHOD(GetCapabilities)(THIS_ LPDIDEVCAPS);
		STDMETHOD(EnumObjects)(THIS_ LPDIENUMDEVICEOBJECTSCALLBACKA,LPVOID,DWORD);
		STDMETHOD(GetProperty)(THIS_ REFGUID,LPDIPROPHEADER);
		STDMETHOD(SetProperty)(THIS_ REFGUID,LPCDIPROPHEADER);
		STDMETHOD(Acquire)(THIS);
		STDMETHOD(Unacquire)(THIS);
		STDMETHOD(GetDeviceState)(THIS_ DWORD,LPVOID);
		STDMETHOD(GetDeviceData)(THIS_ DWORD,LPDIDEVICEOBJECTDATA,LPDWORD,DWORD);
		STDMETHOD(SetDataFormat)(THIS_ LPCDIDATAFORMAT);
		STDMETHOD(SetEventNotification)(THIS_ HANDLE);
		STDMETHOD(SetCooperativeLevel)(THIS_ HWND,DWORD);
		STDMETHOD(GetObjectInfo)(THIS_ LPDIDEVICEOBJECTINSTANCEA,DWORD,DWORD);
		STDMETHOD(GetDeviceInfo)(THIS_ LPDIDEVICEINSTANCEA);
		STDMETHOD(RunControlPanel)(THIS_ HWND,DWORD);
		STDMETHOD(Initialize)(THIS_ HINSTANCE,DWORD,REFGUID);
};

class DirectInputDeviceWHook : public IDirectInputDeviceW
{
	private:
		IDirectInputDeviceW * did;

	public:
		DirectInputDeviceWHook(IDirectInputDeviceW* did);

		/*** IUnknown methods ***/
		STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID * ppvObj);
		STDMETHOD_(ULONG,AddRef)(THIS);
		STDMETHOD_(ULONG,Release)(THIS);

		/*** IDirectInputDeviceW methods ***/
		STDMETHOD(GetCapabilities)(THIS_ LPDIDEVCAPS);
		STDMETHOD(EnumObjects)(THIS_ LPDIENUMDEVICEOBJECTSCALLBACKW,LPVOID,DWORD);
		STDMETHOD(GetProperty)(THIS_ REFGUID,LPDIPROPHEADER);
		STDMETHOD(SetProperty)(THIS_ REFGUID,LPCDIPROPHEADER);
		STDMETHOD(Acquire)(THIS);
		STDMETHOD(Unacquire)(THIS);
		STDMETHOD(GetDeviceState)(THIS_ DWORD,LPVOID);
		STDMETHOD(GetDeviceData)(THIS_ DWORD,LPDIDEVICEOBJECTDATA,LPDWORD,DWORD);
		STDMETHOD(SetDataFormat)(THIS_ LPCDIDATAFORMAT);
		STDMETHOD(SetEventNotification)(THIS_ HANDLE);
		STDMETHOD(SetCooperativeLevel)(THIS_ HWND,DWORD);
		STDMETHOD(GetObjectInfo)(THIS_ LPDIDEVICEOBJECTINSTANCEW,DWORD,DWORD);
		STDMETHOD(GetDeviceInfo)(THIS_ LPDIDEVICEINSTANCEW);
		STDMETHOD(RunControlPanel)(THIS_ HWND,DWORD);
		STDMETHOD(Initialize)(THIS_ HINSTANCE,DWORD,REFGUID);
};

class DirectInputDevice8AHook : public IDirectInputDevice8A
{
	private:
		IDirectInputDevice8A * did;

	public:
		DirectInputDevice8AHook(IDirectInputDevice8A *did);

		/*** IUnknown methods ***/
		STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID * ppvObj);
		STDMETHOD_(ULONG,AddRef)(THIS);
		STDMETHOD_(ULONG,Release)(THIS);

		/*** IDirectInputDevice8A methods ***/
		STDMETHOD(GetCapabilities)(THIS_ LPDIDEVCAPS);
		STDMETHOD(EnumObjects)(THIS_ LPDIENUMDEVICEOBJECTSCALLBACKA,LPVOID,DWORD);
		STDMETHOD(GetProperty)(THIS_ REFGUID,LPDIPROPHEADER);
		STDMETHOD(SetProperty)(THIS_ REFGUID,LPCDIPROPHEADER);
		STDMETHOD(Acquire)(THIS);
		STDMETHOD(Unacquire)(THIS);
		STDMETHOD(GetDeviceState)(THIS_ DWORD,LPVOID);
		STDMETHOD(GetDeviceData)(THIS_ DWORD,LPDIDEVICEOBJECTDATA,LPDWORD,DWORD);
		STDMETHOD(SetDataFormat)(THIS_ LPCDIDATAFORMAT);
		STDMETHOD(SetEventNotification)(THIS_ HANDLE);
		STDMETHOD(SetCooperativeLevel)(THIS_ HWND,DWORD);
		STDMETHOD(GetObjectInfo)(THIS_ LPDIDEVICEOBJECTINSTANCEA,DWORD,DWORD);
		STDMETHOD(GetDeviceInfo)(THIS_ LPDIDEVICEINSTANCEA);
		STDMETHOD(RunControlPanel)(THIS_ HWND,DWORD);
		STDMETHOD(Initialize)(THIS_ HINSTANCE,DWORD,REFGUID);
		STDMETHOD(CreateEffect)(THIS_ REFGUID,LPCDIEFFECT,LPDIRECTINPUTEFFECT *,LPUNKNOWN);
		STDMETHOD(EnumEffects)(THIS_ LPDIENUMEFFECTSCALLBACKA,LPVOID,DWORD);
		STDMETHOD(GetEffectInfo)(THIS_ LPDIEFFECTINFOA,REFGUID);
		STDMETHOD(GetForceFeedbackState)(THIS_ LPDWORD);
		STDMETHOD(SendForceFeedbackCommand)(THIS_ DWORD);
		STDMETHOD(EnumCreatedEffectObjects)(THIS_ LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,LPVOID,DWORD);
		STDMETHOD(Escape)(THIS_ LPDIEFFESCAPE);
		STDMETHOD(Poll)(THIS);
		STDMETHOD(SendDeviceData)(THIS_ DWORD,LPCDIDEVICEOBJECTDATA,LPDWORD,DWORD);
		STDMETHOD(EnumEffectsInFile)(THIS_ LPCSTR,LPDIENUMEFFECTSINFILECALLBACK,LPVOID,DWORD);
		STDMETHOD(WriteEffectToFile)(THIS_ LPCSTR,DWORD,LPDIFILEEFFECT,DWORD);
		STDMETHOD(BuildActionMap)(THIS_ LPDIACTIONFORMATA,LPCSTR,DWORD);
		STDMETHOD(SetActionMap)(THIS_ LPDIACTIONFORMATA,LPCSTR,DWORD);
		STDMETHOD(GetImageInfo)(THIS_ LPDIDEVICEIMAGEINFOHEADERA);
};


class DirectInputDevice8WHook : public IDirectInputDevice8W
{
	private:
		IDirectInputDevice8W * did;

	public:
		DirectInputDevice8WHook(IDirectInputDevice8W *di);

		/*** IUnknown methods ***/
		STDMETHOD(QueryInterface)(THIS_ REFIID riid, LPVOID * ppvObj);
		STDMETHOD_(ULONG,AddRef)(THIS);
		STDMETHOD_(ULONG,Release)(THIS);

		/*** IDirectInputDevice8W methods ***/
		STDMETHOD(GetCapabilities)(THIS_ LPDIDEVCAPS);
		STDMETHOD(EnumObjects)(THIS_ LPDIENUMDEVICEOBJECTSCALLBACKW,LPVOID,DWORD);
		STDMETHOD(GetProperty)(THIS_ REFGUID,LPDIPROPHEADER);
		STDMETHOD(SetProperty)(THIS_ REFGUID,LPCDIPROPHEADER);
		STDMETHOD(Acquire)(THIS);
		STDMETHOD(Unacquire)(THIS);
		STDMETHOD(GetDeviceState)(THIS_ DWORD,LPVOID);
		STDMETHOD(GetDeviceData)(THIS_ DWORD,LPDIDEVICEOBJECTDATA,LPDWORD,DWORD);
		STDMETHOD(SetDataFormat)(THIS_ LPCDIDATAFORMAT);
		STDMETHOD(SetEventNotification)(THIS_ HANDLE);
		STDMETHOD(SetCooperativeLevel)(THIS_ HWND,DWORD);
		STDMETHOD(GetObjectInfo)(THIS_ LPDIDEVICEOBJECTINSTANCEW,DWORD,DWORD);
		STDMETHOD(GetDeviceInfo)(THIS_ LPDIDEVICEINSTANCEW);
		STDMETHOD(RunControlPanel)(THIS_ HWND,DWORD);
		STDMETHOD(Initialize)(THIS_ HINSTANCE,DWORD,REFGUID);
		STDMETHOD(CreateEffect)(THIS_ REFGUID,LPCDIEFFECT,LPDIRECTINPUTEFFECT *,LPUNKNOWN);
		STDMETHOD(EnumEffects)(THIS_ LPDIENUMEFFECTSCALLBACKW,LPVOID,DWORD);
		STDMETHOD(GetEffectInfo)(THIS_ LPDIEFFECTINFOW,REFGUID);
		STDMETHOD(GetForceFeedbackState)(THIS_ LPDWORD);
		STDMETHOD(SendForceFeedbackCommand)(THIS_ DWORD);
		STDMETHOD(EnumCreatedEffectObjects)(THIS_ LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,LPVOID,DWORD);
		STDMETHOD(Escape)(THIS_ LPDIEFFESCAPE);
		STDMETHOD(Poll)(THIS);
		STDMETHOD(SendDeviceData)(THIS_ DWORD,LPCDIDEVICEOBJECTDATA,LPDWORD,DWORD);
		STDMETHOD(EnumEffectsInFile)(THIS_ LPCWSTR,LPDIENUMEFFECTSINFILECALLBACK,LPVOID,DWORD);
		STDMETHOD(WriteEffectToFile)(THIS_ LPCWSTR,DWORD,LPDIFILEEFFECT,DWORD);
		STDMETHOD(BuildActionMap)(THIS_ LPDIACTIONFORMATW,LPCWSTR,DWORD);
		STDMETHOD(SetActionMap)(THIS_ LPDIACTIONFORMATW,LPCWSTR,DWORD);
		STDMETHOD(GetImageInfo)(THIS_ LPDIDEVICEIMAGEINFOHEADERW);
};

#endif
